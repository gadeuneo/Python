def paul(n, k):
    if n % 2 == 0:
        return n // 2
    else:
        return 3 * n + k

Paul function k analysis.

If k is even, the number will always be odd, so it will continously grow. If k is 0, then the number will grow continously because even
though it will reach a number divisible by 2, it will multipled by a large odd number. For any odd k, the function will loop continously because
it is similar to the k = 1 problem. Odd k enters a loop unless the range of n is changed. If k is negative, the even k will grow continously, while the 
negative odd k will repeat. 